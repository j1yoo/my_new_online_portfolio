<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://j1yoo.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://j1yoo.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-06-25T20:33:33+00:00</updated><id>https://j1yoo.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">External Post from open.substack.com</title><link href="https://j1yoo.github.io/blog/2025/external-post-from-opensubstackcom/" rel="alternate" type="text/html" title="External Post from open.substack.com"/><published>2025-05-23T00:00:00+00:00</published><updated>2025-05-23T00:00:00+00:00</updated><id>https://j1yoo.github.io/blog/2025/external-post-from-opensubstackcom</id><content type="html" xml:base="https://j1yoo.github.io/blog/2025/external-post-from-opensubstackcom/"><![CDATA[<p>This is an external post. Click the link to read the full content.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[External content from open.substack.com.]]></summary></entry><entry><title type="html">Multi-Armed Bandit (MAB) as an Alternative to A/B Testing: a Simulation using R</title><link href="https://j1yoo.github.io/blog/2021/Multi_Armed_Bandit_(MAB)_as_an_Alternative_to_AB_Testing-_a_Simulation_Using_R/" rel="alternate" type="text/html" title="Multi-Armed Bandit (MAB) as an Alternative to A/B Testing: a Simulation using R"/><published>2021-11-20T00:00:00+00:00</published><updated>2021-11-20T00:00:00+00:00</updated><id>https://j1yoo.github.io/blog/2021/Multi_Armed_Bandit_(MAB)_as_an_Alternative_to_AB_Testing:_a_Simulation_Using_R</id><content type="html" xml:base="https://j1yoo.github.io/blog/2021/Multi_Armed_Bandit_(MAB)_as_an_Alternative_to_AB_Testing-_a_Simulation_Using_R/"><![CDATA[<p>Imagine an e-commerce retailer that wants to optimize its checkout process or an advertising agency that is trying to make an optimal advertising decision. This is often done in a <em>test-and-learn</em> framework via what is popularly known as A/B testing. In 2019, nearly half of the firms in the US (\(\approx 44\%\)) were using A/B testing softwares (<a href="https://www.invespcro.com/blog/the-state-of-ab-testing/">Saleh 2020</a>). In an A/B test, firms equally / randomly divide their customer base into two or more groups each of which are assigned to different versions of what is being tested, e.g., layouts in a landing page or ad versions (explore phase). After finishing the test, firms then use the best performing version of ad / layout (exploit phase). What this means is a large number of customers will be served a suboptimal variant during the test phase which inevitably generates an opportunity cost. Firms can overcome this apparent limitation and do better by <em>earning-while-learning</em> using MAB (<a href="10.1287/mksc.2016.1023">Schwartz et al. 2017</a>).</p> <p>MAB is a classic adoptive experimentation &amp; a dynamic optimization problem (Robin 1952; Thompson 1933). In a business context, MAB can be used to answer questions like “how should advertising agencies decide what percentage of impressions to allocate to each digital ad version on an ongoing basis to maximize earning while learning?” At its core, these types of questions involve a trade-off between reward later (i.e., exploration) and reward now (i.e., exploitation). MAB alghrithms (e.g., \(\varepsilon\)-greedy, UCB, Thompson sampling) attempt to strike a balance between the two in a real-time basis to maximize the cumulative reward (as denoted below) while continuing to search for the options that may perform better in the future.</p> <h2 id="the-setup">The Setup</h2> <p>Let’s first set the length of an individual simulation, \(t = {1,\dots, T}\) (i.e., horizon), and how many times we are going to repeat each simulation over \(t = {1, \dots, T}\) (i.e., simulations), which will be used in the simulator() function in <a href="https://cran.r-project.org/web/packages/contextual/contextual.pdf">‘contextual’</a>. In this simulation, I will consider five alternative ad types each of which have conversion probabilities of 5%, 20%, 25%, 10%, and 15%.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">horizon</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">1000L</span><span class="w">
</span><span class="n">simulations</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">1000L</span><span class="w">
</span><span class="n">conversionProb</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">0.05</span><span class="p">,</span><span class="w"> </span><span class="m">0.20</span><span class="p">,</span><span class="w"> </span><span class="m">0.25</span><span class="p">,</span><span class="w"> </span><span class="m">0.10</span><span class="p">,</span><span class="w"> </span><span class="m">0.15</span><span class="p">)</span><span class="w">
</span><span class="n">nTestSample</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0.5</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">horizon</span><span class="w">
</span><span class="n">clickProb</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">simulations</span><span class="p">)</span><span class="w">
</span><span class="n">adDistMatrix</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">matrix</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">simulations</span><span class="p">,</span><span class="w"> </span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">))</span><span class="w">
</span><span class="n">adDistMatrixAB</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">matrix</span><span class="p">(</span><span class="kc">NA</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">simulations</span><span class="p">,</span><span class="w"> </span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">))</span><span class="w">
</span></code></pre></div></div> <h2 id="simulating-ab-testing">Simulating A/B Testing</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">simulations</span><span class="p">){</span><span class="w">  
  </span><span class="n">testSample</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">,</span><span class="w">                      
                       </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">sample</span><span class="p">(</span><span class="m">0</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">nTestSample</span><span class="p">,</span><span class="w"> </span><span class="n">replace</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">prob</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)))</span><span class="w">      
  </span><span class="n">testColumns</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">))[</span><span class="o">-</span><span class="n">which.max</span><span class="p">(</span><span class="n">colSums</span><span class="p">(</span><span class="n">testSample</span><span class="p">))]</span><span class="w">      
  </span><span class="n">p.values</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">testColumns</span><span class="p">,</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">prop.test</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">colSums</span><span class="p">(</span><span class="n">testSample</span><span class="p">[,</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">which.max</span><span class="p">(</span><span class="n">colSums</span><span class="p">(</span><span class="n">testSample</span><span class="p">)))]),</span><span class="w">
                                                        </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="n">nTestSample</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">))</span><span class="o">$</span><span class="n">p.value</span><span class="p">)</span><span class="w">      
  </span><span class="n">adsAfterABTest</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">))[</span><span class="o">-</span><span class="w"> </span><span class="n">testColumns</span><span class="p">[</span><span class="n">which</span><span class="p">(</span><span class="n">p.values</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="m">0.05</span><span class="p">)]]</span><span class="w">      
 
  </span><span class="c1"># now just with the best performing ad(s)  </span><span class="w">
  </span><span class="n">ABSample</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">[</span><span class="n">adsAfterABTest</span><span class="p">],</span><span class="w">                        
                     </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="n">sample</span><span class="p">(</span><span class="m">0</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="nf">round</span><span class="p">((</span><span class="n">horizon</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">nTestSample</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">)</span><span class="w"> </span><span class="o">/</span><span class="w">                                                  </span><span class="nf">length</span><span class="p">(</span><span class="n">adsAfterABTest</span><span class="p">),</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="w"> </span><span class="n">replace</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">prob</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="p">)))</span><span class="w">      
  </span><span class="n">clickProbTest</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">as.vector</span><span class="p">(</span><span class="n">testSample</span><span class="p">))</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">testSample</span><span class="p">))</span><span class="w">  
  </span><span class="n">clickProbAB</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">as.vector</span><span class="p">(</span><span class="n">ABSample</span><span class="p">))</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">ABSample</span><span class="p">))</span><span class="w">      
  </span><span class="n">clickProb</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">clickProbTest</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="p">(</span><span class="n">nTestSample</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">horizon</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">clickProbAB</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="p">(</span><span class="m">1</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">nTestSample</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">horizon</span><span class="p">)</span><span class="w">      
 
  </span><span class="c1"># distribution of which ads were seen over the course of all trials  </span><span class="w">
  </span><span class="n">adDistMatrix</span><span class="p">[</span><span class="n">i</span><span class="p">,]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">),</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">))</span><span class="w">  
  </span><span class="n">adDistributionAB</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">conversionProb</span><span class="p">))</span><span class="w">  
  </span><span class="n">adDistributionAB</span><span class="p">[</span><span class="n">adsAfterABTest</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">adsAfterABTest</span><span class="p">),</span><span class="w"> </span><span class="nf">length</span><span class="p">(</span><span class="n">adsAfterABTest</span><span class="p">))</span><span class="w">  
  </span><span class="n">adDistMatrixAB</span><span class="p">[</span><span class="n">i</span><span class="p">,]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">adDistributionAB</span><span class="w">    
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <h2 id="calculating-the-total-payoff">Calculating the Total Payoff</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Total Payoff from A/B Testing</span><span class="w">
</span><span class="n">ABPayoff</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="n">nTestSample</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">clickProbTest</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="p">(</span><span class="n">nTestSample</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">clickProbAB</span><span class="p">)</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">ABPayoff</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 194.6
</code></pre></div></div> <h2 id="simulating-mab-using-varepsilon-greedy-algorithm">Simulating MAB using \(\varepsilon\)-Greedy algorithm</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">contextual</span><span class="p">)</span><span class="w">
</span><span class="n">bandit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">BasicBernoulliBandit</span><span class="o">$</span><span class="n">new</span><span class="p">(</span><span class="n">weights</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">conversionProb</span><span class="p">)</span><span class="w">
</span><span class="n">policy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">EpsilonGreedyPolicy</span><span class="o">$</span><span class="n">new</span><span class="p">(</span><span class="n">epsilon</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0.10</span><span class="p">)</span><span class="w">
</span><span class="n">agent</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Agent</span><span class="o">$</span><span class="n">new</span><span class="p">(</span><span class="n">policy</span><span class="p">,</span><span class="w"> </span><span class="n">bandit</span><span class="p">)</span><span class="w">

</span><span class="c1">#historyEG &lt;- Simulator$new(agent, horizon, simulations)$run()</span><span class="w">
</span><span class="c1"># plot(historyEG, type = "arms",</span><span class="w">
</span><span class="c1">#      legend_labels = c('Ad Type 1', 'Ad Type 2', 'Ad Type 3', 'Ad Type 4', 'Ad Type 5'),</span><span class="w">
</span><span class="c1">#      legend_title = 'Epsilon Greedy',</span><span class="w">
</span><span class="c1">#      legend_position = "topright",</span><span class="w">
</span><span class="c1">#      smooth = TRUE)</span><span class="w">
</span><span class="c1">#summary(historyEG)</span><span class="w">

</span><span class="n">print</span><span class="p">(</span><span class="n">bandit</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## &lt;environment: 0x7fa5535b2b00&gt;
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="p">(</span><span class="n">policy</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## &lt;environment: 0x7fa5537523b8&gt;
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">print</span><span class="p">(</span><span class="n">agent</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## &lt;environment: 0x7fa55500c828&gt;
</code></pre></div></div> <h5 id="created-on-nov-20-2021">Created on Nov. 20, 2021</h5>]]></content><author><name></name></author><category term="Research"/><category term="Research"/><summary type="html"><![CDATA[Imagine an e-commerce retailer that wants to optimize its checkout process or an advertising agency that is trying to make an optimal advertising decision. This is often done in a test-and-learn framework via what is popularly known as A/B testing. In 2019, nearly half of the firms in the US (\(\approx 44\%\)) were using A/B testing softwares (Saleh 2020). In an A/B test, firms equally / randomly divide their customer base into two or more groups each of which are assigned to different versions of what is being tested, e.g., layouts in a landing page or ad versions (explore phase). After finishing the test, firms then use the best performing version of ad / layout (exploit phase). What this means is a large number of customers will be served a suboptimal variant during the test phase which inevitably generates an opportunity cost. Firms can overcome this apparent limitation and do better by earning-while-learning using MAB (Schwartz et al. 2017).]]></summary></entry><entry><title type="html">Scraping the Online Job Posting Data: ‘Indeed.com’</title><link href="https://j1yoo.github.io/blog/2019/Scraping_the_Online_Job_Posting_Data-_'Indeed.com'/" rel="alternate" type="text/html" title="Scraping the Online Job Posting Data: ‘Indeed.com’"/><published>2019-10-03T00:00:00+00:00</published><updated>2019-10-03T00:00:00+00:00</updated><id>https://j1yoo.github.io/blog/2019/Scraping_the_Online_Job_Posting_Data:_&apos;Indeed.com&apos;</id><content type="html" xml:base="https://j1yoo.github.io/blog/2019/Scraping_the_Online_Job_Posting_Data-_&apos;Indeed.com&apos;/"><![CDATA[<p><em>p.s., This is still a work-in-progress.</em></p> <p>I am scraping the search results for job postings that require skills related to artificial intelligence; e.g., experience and knowledge on machine learning, linear algebra, data analytics, etc. The search results in 11,807 pages in each of which there are ten job postings (approximately 118,070 job openings for A.I. alone in the United States as of October 2, 2019).</p> <h3 id="terminal-and-tmux">Terminal and tmux:</h3> <p>Using a remote server for the parsing process.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ssh</span><span class="w"> </span><span class="o">&lt;</span><span class="n">account_ID</span><span class="o">&gt;@&lt;</span><span class="n">Server_IP_Address</span><span class="o">&gt;</span><span class="w">  </span><span class="c1">## Connect to a server</span><span class="w">
</span><span class="n">tmux</span><span class="w"> </span><span class="n">attach</span><span class="w"> </span><span class="o">-</span><span class="n">t</span><span class="w"> </span><span class="o">&lt;</span><span class="n">Session</span><span class="w"> </span><span class="n">Number</span><span class="o">&gt;</span><span class="w">  </span><span class="c1">## Attach a tmux session</span><span class="w">
</span><span class="n">R</span><span class="w">  </span><span class="c1">## Access R</span><span class="w">
</span></code></pre></div></div> <h3 id="loading-libraries-in-r">Loading libraries in R:</h3> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">data.table</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rvest</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">xml2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringi</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <h3 id="checking-the-total-number-of-pages">Checking the total Number of Pages:</h3> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">num_pages</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">11807</span><span class="w"> </span><span class="c1"># last page of results</span><span class="w">
</span><span class="n">full_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">vector</span><span class="p">(</span><span class="s2">"list"</span><span class="p">)</span><span class="w">

</span><span class="n">get_job_postings</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">url</span><span class="p">){</span><span class="w">
  </span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://www.indeed.com/jobs?q=artificial%20intelligence"</span><span class="p">,</span><span class="w"> 
                </span><span class="s2">"&amp;start="</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w">  </span><span class="c1">## Can be adjusted depending on which search results are to be scraped.</span><span class="w">
  </span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xml2</span><span class="o">::</span><span class="n">read_html</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="w">
  </span><span class="n">href_links</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"div"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'//*[@data-tn-element="jobTitle"]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_attr</span><span class="p">(</span><span class="s2">"href"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://indeed.com"</span><span class="p">,</span><span class="n">.</span><span class="p">)</span><span class="w">  
  
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="n">num_pages</span><span class="p">){</span><span class="w">
  </span><span class="n">url</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://www.indeed.com/jobs?q=artificial%20intelligence"</span><span class="p">,</span><span class="w"> 
                </span><span class="s2">"&amp;start="</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">)</span><span class="w">
  </span><span class="n">page</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xml2</span><span class="o">::</span><span class="n">read_html</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="w">
  
  </span><span class="n">href_links</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"div"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'//*[@data-tn-element="jobTitle"]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">html_attr</span><span class="p">(</span><span class="s2">"href"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://indeed.com"</span><span class="p">,</span><span class="n">.</span><span class="p">)</span><span class="w">
  
  </span><span class="n">subdata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.table</span><span class="p">()</span><span class="w">
  </span><span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">seq_along</span><span class="p">(</span><span class="n">href_links</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">page2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">xml2</span><span class="o">::</span><span class="n">read_html</span><span class="p">(</span><span class="n">href_links</span><span class="p">[</span><span class="n">j</span><span class="p">])</span><span class="w">
  
    </span><span class="n">Sys.sleep</span><span class="p">(</span><span class="m">2.5</span><span class="p">)</span><span class="w"> </span><span class="c1"># To prevent the platform from blocking us.</span><span class="w">
    
    </span><span class="n">job_title</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page2</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">  </span><span class="c1"># [1] Job Title</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'//*[@class="icl-u-xs-mb--xs icl-u-xs-mt--none  jobsearch-JobInfoHeader-title"]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">stri_trim_both</span><span class="p">()</span><span class="w">
    
    </span><span class="n">company_name</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page2</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">  </span><span class="c1"># [2] Company Name</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'//*[@class="jobsearch-CompanyAvatar-companyLink"]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">paste0</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
    
    </span><span class="n">job_location</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page2</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">  </span><span class="c1"># [3] Job Location</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'//*[@class=" jobsearch-CompanyInfoWithoutHeaderImage jobsearch-CompanyInfoWithReview"]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">paste0</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
    
    </span><span class="n">company_rating</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page2</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">  </span><span class="c1"># [4] Rating</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"a"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'//*[@class="icl-Ratings-starsCountWrapper icl-Ratings-link"]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_attr</span><span class="p">(</span><span class="s2">"aria-label"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">paste0</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
    
    </span><span class="n">company_review</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page2</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">  </span><span class="c1"># [5] Number of Reviews</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'/html/body/div[1]/div[2]/div[3]/div/div/div[1]/div[1]/div[1]/div[1]/div/div/div[2]/div/a/div[2]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">paste0</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
    
    </span><span class="n">job_description</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">page2</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="n">xpath</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'//*[@id="jobDescriptionText"]'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
      </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">stri_trim_both</span><span class="p">()</span><span class="w">
    
    </span><span class="n">subdata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">subdata</span><span class="p">,</span><span class="w"> </span><span class="n">safely</span><span class="p">(</span><span class="n">data.table</span><span class="p">(</span><span class="n">date_crawled</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">(),</span><span class="w">
                                                </span><span class="n">job_title</span><span class="p">,</span><span class="w">
                                                </span><span class="n">company_name</span><span class="p">,</span><span class="w">
                                                </span><span class="n">job_location</span><span class="p">,</span><span class="w">
                                                </span><span class="n">job_rating</span><span class="p">,</span><span class="w">
                                                </span><span class="n">job_review</span><span class="p">,</span><span class="w">
                                                </span><span class="n">href_links</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">href_links</span><span class="p">[</span><span class="n">j</span><span class="p">])))</span><span class="w">
    
    </span><span class="c1"># print(paste0("For-loop in for-loop #", j,"."))</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="n">full_data</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subdata</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"Iteration "</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="s2">" completed."</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="s2">"Iteration completed."</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">full_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">rbindlist</span><span class="p">(</span><span class="n">full_data</span><span class="p">)</span><span class="w">
</span><span class="n">write.csv</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">full_data</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"/mnt/admin_jaewon_02/AI_job_posting_data/AI_job_posting_data.csv"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <h3 id="what-the-data-looks-like">What the Data Looks Like:</h3> <table> <thead> <tr> <th style="text-align: center"><strong>id</strong></th> <th style="text-align: center"><strong>date_crawled</strong></th> <th style="text-align: center"><strong>job_title</strong></th> <th style="text-align: center"><strong>company_name</strong></th> <th style="text-align: center"><strong>job_location</strong></th> <th style="text-align: center"><strong>company_rating</strong></th> <th style="text-align: center"><strong>company_review</strong></th> <th style="text-align: center"><strong>href_links</strong></th> </tr> </thead> <tbody> <tr> <td style="text-align: center">1</td> <td style="text-align: center">10/2/19 13:05</td> <td style="text-align: center">VP of Artificial Intelligence</td> <td style="text-align: center">Samsung SDS America</td> <td style="text-align: center">Samsung SDS America6,867 reviews-San Jose, CA 95134</td> <td style="text-align: center">4 out of 5</td> <td style="text-align: center">6,867 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=29e6b0cfd4f1ad6e&amp;fccid=da3c7fed78dd1607&amp;vjs=3</td> </tr> <tr> <td style="text-align: center">2</td> <td style="text-align: center">10/2/19 13:05</td> <td style="text-align: center">Artificial Intelligence Solution Architect</td> <td style="text-align: center">Avanade</td> <td style="text-align: center">Avanade243 reviews-Baltimore, MD</td> <td style="text-align: center">3.7 out of 5</td> <td style="text-align: center">243 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=c8b32b06ac7c5f37&amp;fccid=5386281035076fdf&amp;vjs=3</td> </tr> <tr> <td style="text-align: center">3</td> <td style="text-align: center">10/2/19 13:05</td> <td style="text-align: center">Artificial Intelligence Intern</td> <td style="text-align: center">Tractor Supply Company</td> <td style="text-align: center">Tractor Supply Company3,297 reviews-Brentwood, TN 37027</td> <td style="text-align: center">3.5 out of 5</td> <td style="text-align: center">3,297 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=4f9e3676b2e5e4c8&amp;fccid=11196309d222f1c1&amp;vjs=3</td> </tr> <tr> <td style="text-align: center">4</td> <td style="text-align: center">10/2/19 13:05</td> <td style="text-align: center">Associate - Artificial Intelligence &amp; Semantics</td> <td style="text-align: center">Morgan Stanley</td> <td style="text-align: center">Morgan Stanley3,506 reviews-Maryland</td> <td style="text-align: center">3.9 out of 5</td> <td style="text-align: center">3,506 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=63e1414a8823a284&amp;fccid=0c39fb2c91742dcf&amp;vjs=3</td> </tr> <tr> <td style="text-align: center">5</td> <td style="text-align: center">10/2/19 13:06</td> <td style="text-align: center">Backend Software Engineer, Artificial Intelligence</td> <td style="text-align: center">IBM</td> <td style="text-align: center">IBM27,074 reviews-Cambridge, MA 02139</td> <td style="text-align: center">3.9 out of 5</td> <td style="text-align: center">27,074 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=c6bd906a6276d2d3&amp;fccid=de71a49b535e21cb&amp;vjs=3</td> </tr> <tr> <td style="text-align: center">6</td> <td style="text-align: center">10/2/19 13:06</td> <td style="text-align: center">Conversational Artificial Intelligence Designer</td> <td style="text-align: center">PennyMac Loan Services, LLC</td> <td style="text-align: center">PennyMac Loan Services, LLC267 reviews-Plano, TX</td> <td style="text-align: center">3.1 out of 5</td> <td style="text-align: center">267 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=371dc494bc960265&amp;fccid=24c6c21cc329dea7&amp;vjs=3</td> </tr> <tr> <td style="text-align: center">7</td> <td style="text-align: center">10/2/19 13:06</td> <td style="text-align: center">Artificial Intelligence</td> <td style="text-align: center">Bank of America</td> <td style="text-align: center">Bank of America28,108 reviews-Charlotte, NC 28255</td> <td style="text-align: center">3.8 out of 5</td> <td style="text-align: center">28,108 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=8b653788c51d5ef9&amp;fccid=5bd99dfa21c8a490&amp;vjs=3</td> </tr> <tr> <td style="text-align: center">8</td> <td style="text-align: center">10/2/19 13:06</td> <td style="text-align: center">Intern - Artificial Intelligence (AI)</td> <td style="text-align: center">Alion Science and Technology</td> <td style="text-align: center">Alion Science and Technology227 reviews-College Park, MD</td> <td style="text-align: center">3.5 out of 5</td> <td style="text-align: center">227 reviews</td> <td style="text-align: center">https://indeed.com/rc/clk?jk=2638fb51ee02f970&amp;fccid=1f295927bec6a974&amp;vjs=3</td> </tr> </tbody> </table> <h3 id="sample-job-description-row-1-vp-of-artificial-intelligence-samsung-sds-america">Sample Job Description (Row 1: VP of Artificial Intelligence, Samsung SDS America):</h3> <p>“Vice President of Artificial Intelligence is an executive position for a result oriented R&amp;D leader. He or she will lead R&amp;D efforts of Artificial Intelligence Team (AIT) within Samsung SDS Research America (SDSRA) located in Silicon Valley. He or she will be responsible for creating the overall AI roadmap for AIT and building a cohesive and comprehensive AI strategy for execution as well as providing technical guidance.</p> <p>AIT in SDSRA has been building AI productivity enhancement platform for the last two years and will be launching it early next year. The core mission of this position is the oversight of product development efforts for current AI platform as well as the incubation of new AI products. This role requires a close collaboration with Artificial Intelligence Research Center in Samsung SDS in Korea from an engineering perspective and with Samsung SDS America from going to market perspective…”</p> <h5 id="created-on-oct-03-2019">Created on Oct. 03, 2019</h5>]]></content><author><name></name></author><category term="Research"/><category term="Research"/><summary type="html"><![CDATA[p.s., This is still a work-in-progress.]]></summary></entry><entry><title type="html">Collection of Useful Packages, Cheat Sheets (R and Python), and Tips</title><link href="https://j1yoo.github.io/blog/2019/Collection_of_Useful_Packages,_Cheat_Sheets_(R_and_Python),_and_Tips/" rel="alternate" type="text/html" title="Collection of Useful Packages, Cheat Sheets (R and Python), and Tips"/><published>2019-02-20T00:00:00+00:00</published><updated>2019-02-20T00:00:00+00:00</updated><id>https://j1yoo.github.io/blog/2019/Collection_of_Useful_Packages,_Cheat_Sheets_(R_and_Python),_and_Tips</id><content type="html" xml:base="https://j1yoo.github.io/blog/2019/Collection_of_Useful_Packages,_Cheat_Sheets_(R_and_Python),_and_Tips/"><![CDATA[<h3 id="web-scrapping">Web scrapping:</h3> <ul> <li><a href="https://cran.r-project.org/web/packages/rvest/vignettes/selectorgadget.html">selectogadget, CSS selector</a></li> <li><a href="https://cran.r-project.org/web/packages/rvest/rvest.pdf">rvest, ‘harvesting’ web pages</a></li> <li><a href="https://blog.rstudio.org/2015/04/21/xml2/">xml2, parsing and processing xml &amp; html</a></li> <li><a href="http://www.sciencedirect.com/science/article/pii/S2352711017300110">RCrawler, parallelizing web crawler</a></li> </ul> <h3 id="data-wrangling">Data wrangling:</h3> <ul> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/img/blog/data+table+cheat+sheet.pdf">data.table, enhanced data.frames</a></li> <li><a href="https://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf">dplyr, the “grammer of data manipulation”</a></li> <li><a href="https://www.r-bloggers.com/data-wrangling-with-dplyr-part-1/">dplyr, more data wrangling tips with dplyr, part I</a></li> <li><a href="https://www.r-bloggers.com/data-wrangling-with-dplyr-part-2/">dplyr, more data wrangling tips with dplyr, part II</a></li> <li><a href="http://seananderson.ca/2013/10/19/reshape.html">reshape2, long &lt;-&gt; wide format convertor</a></li> <li><a href="https://blog.rstudio.org/2016/03/29/feather/">feather, fast on-disk data formatting</a></li> <li><a href="https://www.fstpackage.org/">fst, faster (than feather!) way to serialize data frames</a></li> <li><a href="https://cran.r-project.org/web/packages/lubridate/lubridate.pdf">lubridate, date manipulator</a></li> <li><a href="https://www.rdocumentation.org/packages/stringi/versions/1.1.5">stringi, string processor</a></li> <li><a href="https://www.r-statistics.com/2014/08/simpler-r-coding-with-pipes-the-present-and-future-of-the-magrittr-package/">Piping in R</a></li> <li><a href="http://seananderson.ca/2014/09/13/dplyr-intro.html">Piping with dplyr</a></li> <li><a href="https://cran.r-project.org/web/packages/replyr/vignettes/BizarroPipe.html">Bizzaro pipe, debugging tool for long <em>dplyr</em> codes</a></li> <li><a href="https://www.r-bloggers.com/track-changes-in-data-with-the-lumberjack/amp/">lumberjack, tracking changes in data when <em>piping</em></a></li> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Pandas_Cheat_Sheet_2.pdf">Cheat sheet for pandas, data wrangling in python</a></li> </ul> <h3 id="reporting-results">Reporting results:</h3> <ul> <li><a href="https://www.rstudio.com/wp-content/uploads/2016/03/rmarkdown-cheatsheet-2.0.pdf">R markdown, high-quality output format</a></li> <li><a href="http://jakeruss.com/cheatsheets/stargazer.html">stargazer, reporting statistical analysis</a></li> <li><a href="https://www.nyu.edu/projects/beber/files/Chang_LaTeX_sheet.pdf">Cheat sheet for latex</a></li> <li><a href="http://tug.ctan.org/info/symbols/comprehensive/symbols-a4.pdf">Mathematical symbols in latex</a></li> </ul> <h3 id="visualization">Visualization:</h3> <ul> <li><a href="https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf">ggplot2, the “grammer of graphics”</a></li> <li><a href="http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization">ggplot2, a thorough guideline for the package</a></li> <li><a href="https://www.r-bloggers.com/point-arrows-to-specific-parts-of-the-data/amp/">ggplot2, point arrows to specific parts of the data</a></li> <li><a href="https://ggplot2.tidyverse.org/reference/ggtheme.html">ggtheme, customising ggplot2 outputs</a></li> <li><a href="https://www.r-bloggers.com/adding-custom-fonts-to-ggplot-in-r/amp/">Adding custom fonts to ggplot objects</a></li> <li><a href="http://rstudio.github.io/shiny/tutorial/">shiny, interactive visualization tool</a></li> <li><a href="https://github.com/dkahle/ggmap">ggmap, plotting maps in R</a></li> <li><a href="http://motioninsocial.com/tufte/#introduction">tufte, collection of resources for readily accessible visualization</a></li> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_Matplotlib_Cheat_Sheet.pdf">Cheat sheet for matplotlib, plotting in python</a></li> </ul> <h3 id="machine-learning">Machine learning:</h3> <ul> <li><a href="https://keras.rstudio.com/">keras, using Keras in R</a></li> <li><a href="https://cran.r-project.org/web/packages/mlr/vignettes/mlr.html">mlr, machine learning</a></li> <li><a href="https://cran.r-project.org/web/packages/OpenML/index.html">OpenML, collaborative machine learning platform</a></li> <li><a href="https://tensorflow.rstudio.com/">TensorFlow, deep learning?!</a></li> <li><a href="https://www.r-bloggers.com/test-driving-python-integration-in-r-using-the-reticulate-package/">reticulate, python integration in R</a></li> <li><a href="https://rstudio.github.io/keras/index.html">keras, high-level neural network API</a></li> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Keras_Cheat_Sheet_Python.pdf">Cheat sheet for keras, neural networks in python</a></li> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Numpy_Python_Cheat_Sheet.pdf">Cheat sheet for numpy, data analysis in python</a></li> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Scikit_Learn_Cheat_Sheet_Python.pdf">Cheat sheet for scikit-Learn, python machine learning</a></li> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/PySpark_Cheat_Sheet_Python.pdf">Cheat sheet for PySpark, spark for python</a></li> </ul> <h3 id="parallel-computing">Parallel computing:</h3> <ul> <li><a href="https://www.r-bloggers.com/r-with-parallel-computing-from-user-perspectives/">The ‘what’ and the ‘why’</a></li> <li><a href="http://rpubs.com/kaz_yos/1204">lapply, back to ‘base’ic</a></li> <li><a href="https://www.r-bloggers.com/parallelize-a-for-loop-by-rewriting-it-as-an-lapply-call/amp/">lapply, parallelizing for-loops with lapply</a></li> <li><a href="http://gforge.se/2015/02/how-to-go-parallel-in-r-basics-tips/">parallelizing computation in R</a></li> <li><a href="https://www.r-bloggers.com/r-and-openmp-boosting-compiled-code-on-multi-core-cpu-s/">OpenMP, parallelizer for R</a></li> <li><a href="http://www.r-tutor.com/gpu-computing">GPU computing with R</a></li> <li><a href="https://www.r-bloggers.com/r-gpu-programming-for-all-with-gpur/">gpuR, more on GPU computing</a></li> </ul> <h3 id="et-cetera">Et cetera:</h3> <ul> <li><a href="https://www.r-bloggers.com/rstudio-1-2-preview-jobs/amp/">RStudio’s new feature: Jobs</a></li> <li><a href="https://www.r-bloggers.com/r-and-python-using-reticulate-to-get-the-best-of-both-worlds/amp/">reticulate, using R &amp; Python interactively</a></li> <li><a href="https://www.r-bloggers.com/the-reticulate-package-solves-the-hardest-problem-in-data-science-people/amp/">reticulate, bringing together R &amp; Python</a></li> <li><a href="https://www.r-bloggers.com/updating-r/">updating R</a></li> <li><a href="https://github.com/randy3k/radian">radian, an (awesome) alternative console for R</a></li> <li><a href="https://github.com/jalvesaq/colorout">colorout, colorizing R output on a Unix terminal emulator</a></li> <li><a href="https://github.com/rocker-org/rocker/wiki/Using-the-RStudio-image">Using R on Docker</a></li> <li><a href="https://github.com/cloudyr/rmote">rmote, using R on a remote machine</a></li> <li><a href="http://ryanhafen.com/blog/rmote">rmote, serving graphics from remote server to local machine</a></li> <li><a href="https://github.com/rpremraj/mailR">mailR, automatic email sender</a></li> <li><a href="https://medium.com/@randerson112358/send-email-using-r-program-1b094208cf2f">mailR, when you are getting error messages!</a></li> <li><a href="https://tmuxcheatsheet.com/">tmux, tips and shortcuts</a></li> <li><a href="https://github.com/atom/atom">atom, the hackable text editor</a></li> <li><a href="https://s3.amazonaws.com/assets.datacamp.com/blog_assets/Python_SciPy_Cheat_Sheet_Linear_Algebra.pdf">Cheat sheet for scipy, linear algebra in python</a></li> <li><a href="https://www.datasciencecentral.com/profiles/blogs/a-plethora-of-original-underused-statistical-tests">Collection of novel &amp; not-well-known statistical tests</a></li> </ul> <h5 id="created-on-jul-08-2017">Created on Jul. 08, 2017</h5>]]></content><author><name></name></author><category term="Research"/><category term="Research"/><summary type="html"><![CDATA[Web scrapping: selectogadget, CSS selector rvest, ‘harvesting’ web pages xml2, parsing and processing xml &amp; html RCrawler, parallelizing web crawler]]></summary></entry><entry><title type="html">Hand-Rolling OLS Using R</title><link href="https://j1yoo.github.io/blog/2019/Hand_Rolling_OLS_Using_R/" rel="alternate" type="text/html" title="Hand-Rolling OLS Using R"/><published>2019-02-13T00:00:00+00:00</published><updated>2019-02-13T00:00:00+00:00</updated><id>https://j1yoo.github.io/blog/2019/Hand_Rolling_OLS_Using_R</id><content type="html" xml:base="https://j1yoo.github.io/blog/2019/Hand_Rolling_OLS_Using_R/"><![CDATA[<p>To illustrate how to calculate ordinary least squares (OLS) by hand, I am going to use the dataset provided by Nerlove (1963) “Returns to Scale in Electricity Supply” which is publically available at EconPapers (<a href="https://econpapers.repec.org/paper/bocbocins/nerlove63.htm">https://econpapers.repec.org/paper/bocbocins/nerlove63.htm</a>).</p> <p>Let’s first import the data into R using <a href="https://cran.r-project.org/web/packages/foreign/foreign.pdf">the ‘foreign’</a> package and take a glance.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nerlove63</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">foreign</span><span class="o">::</span><span class="n">read.dta</span><span class="p">(</span><span class="s2">"http://fmwww.bc.edu/ec-p/data/hayashi/nerlove63.dta"</span><span class="p">)</span><span class="w">
</span><span class="n">tail</span><span class="p">(</span><span class="n">nerlove63</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">)</span><span class="w"> </span><span class="c1"># print the last five observations </span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##     totcost output plabor pfuel pkap
## 141  44.894   9956   1.68  28.8  203
## 142  67.120  11477   2.24  26.5  151
## 143  73.050  11796   2.12  28.6  148
## 144 139.422  14359   2.31  33.5  212
## 145 119.939  16719   2.30  23.6  162
</code></pre></div></div> <p>The dataset contains five variables: cost (i.e., total cost in million <code class="language-plaintext highlighter-rouge">$</code>), output (i.e., quantity (Q) in billion kilowatt hours), pLabor (i.e., unit price of labor or wage rate in <code class="language-plaintext highlighter-rouge">$</code> per hour), pCapital (i.e., unit price of capital), and pFuel (i.e., unit price of fuels in cent per million British thermal unit). Note that it is a firm-level cross-sectional data that comprises of observations from 145 American electric utility companies in 1955.</p> <p><strong>Nerlove (1963) posits the following production function (this follows <a href="https://en.wikipedia.org/wiki/Cobb%E2%80%93Douglas_production_function">the Cobb-Douglas</a> specification):</strong></p> <p>\[Q = A L^{\alpha_1} K^{\alpha_2} F^{\alpha_3}\]</p> <p>where Q is the output, L is labor, K is capital, F is fuel. Taking logs and re-arranging the terms, we get:</p> <p>\[\log Q = \log A + \alpha_1 \log L + \alpha_2 \log K + \alpha_3 \log F + \epsilon\]</p> <p>Since we do not observe A, L, K, and F but only observe output, labor and capital costs, total cost, and the prices of labor, capital, and fuel, we need to rearrange the cost minimization problem. Given perfect competition, cost minimization combined with the production function, the firm’s cost function would take the form:</p> <p>\[\log C = \log A’ + \gamma_1 \log Q + \gamma_2 \log p_L + \gamma_3 \log p_K + \gamma_4 \log p_F + \epsilon\]</p> <p>where \(\gamma_1 = 1/(\alpha_1 + \alpha_2 + \alpha_3)\), \(\gamma_2 = \alpha_1/(\alpha_1 + \alpha_2 + \alpha_3)\), \(\gamma_3 = \alpha_2/(\alpha_1 + \alpha_2 + \alpha_3)\), and \(\gamma_4 = \alpha_3/(\alpha_1 + \alpha_2 + \alpha_3)\).</p> <p>If \(\alpha_1 + \alpha_2 + \alpha_3 = 1\) (constant returns to scale), then \(\gamma_1 = 1\). On the other hand, if \(\alpha_1 + \alpha_2 + \alpha_3 &gt; 1\) (increasing returns to scale), then \(\gamma_1 &lt; 1\). If \(\alpha_1 + \alpha_2 + \alpha_3 &lt; 1\) (decreasing returns to scale), then \(\gamma_1 &gt; 1\).</p> <p>Let me now implement the log-linearized cost function estimation using the previously loaded data by hand. I am going to use the following log-linearized cost function:</p> <p>\[\log(totcost) = \beta_0 + \beta_1 \log(output) + \beta_2 \log(plabor) + \beta_3 \log(pkap) + \beta_4 \log(pfuel) + \epsilon\]</p> <h2 id="hand-rolling-ols">Hand-Rolling OLS</h2> <p>Let’s first take logs and create the design matrix X and the outcome vector y.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">magrittr</span><span class="p">)</span><span class="w">

</span><span class="c1"># Let's take logs</span><span class="w">
</span><span class="n">logData</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">log</span><span class="p">(</span><span class="n">nerlove63</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">data.frame</span><span class="p">()</span><span class="w">
</span><span class="c1"># rename variables for convenience</span><span class="w">
</span><span class="nf">names</span><span class="p">(</span><span class="n">logData</span><span class="p">)</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"logC"</span><span class="p">,</span><span class="w"> </span><span class="s2">"logQ"</span><span class="p">,</span><span class="w"> </span><span class="s2">"logPL"</span><span class="p">,</span><span class="w"> </span><span class="s2">"logPF"</span><span class="p">,</span><span class="w"> </span><span class="s2">"logPK"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Let's create the design matrix (X)</span><span class="w">
</span><span class="n">X</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cbind</span><span class="p">(</span><span class="n">intercept</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">rep</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">nrow</span><span class="p">(</span><span class="n">logData</span><span class="p">)),</span><span class="w"> </span><span class="n">logData</span><span class="p">[,</span><span class="w"> </span><span class="m">-1</span><span class="p">])</span><span class="w">

</span><span class="c1"># Let's create the outcome vector (y)</span><span class="w">
</span><span class="n">y</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">logData</span><span class="p">[,</span><span class="w"> </span><span class="m">1</span><span class="p">]</span><span class="w"> 

</span><span class="n">head</span><span class="p">(</span><span class="n">X</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##   intercept     logQ    logPL    logPF    logPK
## 1         1 4.276666 1.131402 3.931826 4.406719
## 2         1 6.238325 1.070145 3.931826 4.369448
## 3         1 6.886532 1.098612 3.931826 4.394449
## 4         1 7.313220 1.609438 3.931826 4.394449
## 5         1 7.600902 1.504077 3.931826 4.394449
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">head</span><span class="p">(</span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 1.740466 2.564949 2.772589 3.091042 3.135494
</code></pre></div></div> <p>Now let’s manually perform the OLS estimation. Recall that the OLS estimator is defined as \(\hat{\beta} = (X’X)^{-1}X’y\).</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Transpose of the design matrix: X'</span><span class="w">
</span><span class="n">Xt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">t</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w">

</span><span class="c1"># (X'X)^{-1}</span><span class="w">
</span><span class="n">XtX_inv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">solve</span><span class="p">(</span><span class="n">Xt</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">X</span><span class="p">)</span><span class="w">

</span><span class="c1"># (X'X)^{-1}X'</span><span class="w">
</span><span class="n">XtX_inv_Xt</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">XtX_inv</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">Xt</span><span class="w">

</span><span class="c1"># beta_hat = (X'X)^{-1}X'y</span><span class="w">
</span><span class="n">beta_hat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">XtX_inv_Xt</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">y</span><span class="w">

</span><span class="n">print</span><span class="p">(</span><span class="n">beta_hat</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##                [,1]
## intercept -4.648257
## logQ       0.720820
## logPL      0.436240
## logPF      0.426359
## logPK      0.219626
</code></pre></div></div> <p>Let’s also calculate the fitted values and the residuals.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># fitted values: y_hat = X * beta_hat</span><span class="w">
</span><span class="n">y_hat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">X</span><span class="w"> </span><span class="o">%*%</span><span class="w"> </span><span class="n">beta_hat</span><span class="w"> 

</span><span class="c1"># residuals: e = y - y_hat</span><span class="w">
</span><span class="n">e</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">y_hat</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">y_hat</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##           [,1]
##  [1,] 1.739022
##  [2,] 2.596848
##  [3,] 2.753745
##  [4,] 3.088636
##  [5,] 3.105847
##  [6,] 3.267154
##  [7,] 2.992733
##  [8,] 3.267154
##  [9,] 3.293624
## [10,] 3.403815
</code></pre></div></div> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">head</span><span class="p">(</span><span class="n">e</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##            [,1]
##  [1,]  0.001443537
##  [2,] -0.031899071
##  [3,]  0.018844133
##  [4,]  0.002406003
##  [5,]  0.029646913
##  [6,] -0.052242765
##  [7,] -0.055426806
##  [8,] -0.079002765
##  [9,] -0.063033008
## [10,] -0.095324421
</code></pre></div></div> <p>Now let’s calculate the variance-covariance matrix of the estimator. Recall that \(Var(\hat{\beta}) = \sigma^2 (X’X)^{-1}\). We need to first calculate \(\hat{\sigma}^2 = \frac{e’e}{n-k}\).</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># sigma_hat_squared = sum of squared residuals / degrees of freedom </span><span class="w">
</span><span class="n">sigma_hat_squared</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">e</span><span class="o">^</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="p">(</span><span class="n">nrow</span><span class="p">(</span><span class="n">X</span><span class="p">)</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">ncol</span><span class="p">(</span><span class="n">X</span><span class="p">))</span><span class="w">

</span><span class="c1"># variance-covariance matrix of the estimator</span><span class="w">
</span><span class="n">var_beta_hat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">sigma_hat_squared</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">XtX_inv</span><span class="w">

</span><span class="n">print</span><span class="p">(</span><span class="n">var_beta_hat</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##              intercept        logQ       logPL       logPF       logPK
## intercept  0.171334065 -0.01994041 -0.02779829 -0.02779829 -0.02631336
## logQ      -0.019940413  0.00290417  0.00173978  0.00173978  0.00177936
## logPL     -0.027798290  0.00173978  0.01712086  0.00485714  0.00424429
## logPF     -0.027798290  0.00173978  0.00485714  0.01712086  0.00424429
## logPK     -0.026313364  0.00177936  0.00424429  0.00424429  0.01100980
</code></pre></div></div> <p>From the above, we can calculate the standard errors of individual parameter estimates by taking the square root of the diagonal entries.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># standard errors </span><span class="w">
</span><span class="n">se_beta_hat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">sqrt</span><span class="p">(</span><span class="n">diag</span><span class="p">(</span><span class="n">var_beta_hat</span><span class="p">))</span><span class="w">

</span><span class="n">print</span><span class="p">(</span><span class="n">se_beta_hat</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##  intercept       logQ      logPL      logPF      logPK 
## 0.41391449 0.05389044 0.13086062 0.13086062 0.10492279
</code></pre></div></div> <p>Let’s calculate t-stat for testing \(H_0: \beta_j = 0\) vs. \(H_1: \beta_j \neq 0\).</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># t-stat for testing H0: beta_j = 0 vs. H1: beta_j ≠ 0</span><span class="w">
</span><span class="n">t_stat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">beta_hat</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">se_beta_hat</span><span class="w">

</span><span class="n">print</span><span class="p">(</span><span class="n">t_stat</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##              [,1]
## intercept -11.235
## logQ       13.374
## logPL       3.334
## logPF       3.258
## logPK       2.093
</code></pre></div></div> <h2 id="lets-verify-our-work-using-lm">Let’s verify our work using lm()</h2> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">fitted_model</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">lm</span><span class="p">(</span><span class="n">logC</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="n">logQ</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">logPL</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">logPF</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">logPK</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">logData</span><span class="p">)</span><span class="w">
</span><span class="n">summary</span><span class="p">(</span><span class="n">fitted_model</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## 
## Call:
## lm(formula = logC ~ logQ + logPL + logPF + logPK, data = logData)
## 
## Residuals:
##      Min       1Q   Median       3Q      Max 
## -0.47792 -0.07936 -0.00658  0.08699  0.34952 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&gt;|t|)    
## (Intercept) -4.64826    0.41391 -11.235  &lt; 2e-16 ***
## logQ         0.72082    0.05389  13.374  &lt; 2e-16 ***
## logPL        0.43624    0.13086   3.334 0.001062 ** 
## logPF        0.42636    0.13086   3.258 0.001399 ** 
## logPK        0.21963    0.10492   2.093 0.038020 *  
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## Residual standard error: 0.1456 on 140 degrees of freedom
## Multiple R-squared:  0.9255,	Adjusted R-squared:  0.9234 
## F-statistic: 434.5 on 4 and 140 DF,  p-value: &lt; 2.2e-16
</code></pre></div></div> <p>As expected, our hand-calculated estimates match the output of lm()! According to the result, \(\hat{\gamma}_1 \approx 0.72\) which implies that American electrical utilities exhibited increasing returns to scale in 1955. In other words, \(\hat{\gamma}_1 = 0.72 &lt; 1\) which indicates that \(\alpha_1 + \alpha_2 + \alpha_3 &gt; 1\).</p> <h5 id="created-on-feb-13-2019">Created on Feb. 13, 2019</h5>]]></content><author><name></name></author><category term="Research"/><category term="Research"/><summary type="html"><![CDATA[To illustrate how to calculate ordinary least squares (OLS) by hand, I am going to use the dataset provided by Nerlove (1963) “Returns to Scale in Electricity Supply” which is publically available at EconPapers (https://econpapers.repec.org/paper/bocbocins/nerlove63.htm).]]></summary></entry><entry><title type="html">Places to visit in Seoul, South Korea</title><link href="https://j1yoo.github.io/blog/2018/Places_to_visit_in_Seoul,_South_Korea/" rel="alternate" type="text/html" title="Places to visit in Seoul, South Korea"/><published>2018-12-26T00:00:00+00:00</published><updated>2018-12-26T00:00:00+00:00</updated><id>https://j1yoo.github.io/blog/2018/Places_to_visit_in_Seoul,_South_Korea</id><content type="html" xml:base="https://j1yoo.github.io/blog/2018/Places_to_visit_in_Seoul,_South_Korea/"><![CDATA[<p><em><strong>If you want to drink out and enjoy the city life:</strong></em></p> <ul> <li> <p>Gangnam (강남대로)<br/> Yes, Gangnam from the infamous <a href="https://www.youtube.com/watch?v=9bZkp7q19f0">‘Gangnam style’</a>. Lots of people come out to drink and have fun, especially at night. <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76556">See this for more info.</a></p> </li> <li> <p>Itaewon (이태원)<br/> Again, lots of good restaurants. You will see a lot of foreigners around too.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76406">See this for more info.</a></p> </li> <li> <p>Garosugil (가로수길)<br/> Lots of places to eat out &amp; cafes.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76394">See this for more info.</a></p> </li> <li> <p>Myongdong (명동)<br/> One of the primary shopping districts in Seoul, Korea.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76370">See this for more info.</a></p> </li> <li> <p>Coex (코엑스)<br/> It’s a huge mall where you can shop around, eat, or try some of the latest VR games.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76652">See this for more info.</a></p> </li> </ul> <p><em><strong>If you want to experience traditional Korean culture:</strong></em></p> <ul> <li> <p>Insadong (인사동)<br/> Lots to see and experience :) Has a number of galleries and street shops with traditional goods on display.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76402">See this for more info.</a></p> </li> <li> <p>Bukchon Hanok Village (북촌 한옥 마을)<br/> Home to hundreds of traditional houses.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76359">See this for more info.</a></p> </li> <li> <p>Deoksugung Palace (덕수궁)<br/> Well known for its stone wall road.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76374">See this for more info.</a></p> </li> <li> <p>Gyeongbokgung (경복궁)<br/> One of the well-known palaces in Korea. It also boasts the national palace museum of Korea.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76395">See this for more info.</a></p> </li> <li> <p>Dongdaemun (동대문)<br/> Heunginjimun gate, Cheonggyecheon, Dongdaemun shopping complex, and more.<br/> <a href="https://english.visitkorea.or.kr/svc/whereToGo/locIntrdn/locIntrdnList.do?vcontsId=76378">See this for more info.</a></p> </li> </ul> <h5 id="created-on-dec-26-2018">Created on Dec. 26, 2018</h5>]]></content><author><name></name></author><category term="misc"/><summary type="html"><![CDATA[If you want to drink out and enjoy the city life: Gangnam (강남대로) Yes, Gangnam from the infamous ‘Gangnam style’. Lots of people come out to drink and have fun, especially at night. See this for more info.]]></summary></entry><entry><title type="html">Crawling the Annual Reports (i.e., 10-Ks) using R</title><link href="https://j1yoo.github.io/blog/2017/Crawling_the_Annual_Reports_(i.e.,_10-Ks)_using_R/" rel="alternate" type="text/html" title="Crawling the Annual Reports (i.e., 10-Ks) using R"/><published>2017-06-06T00:00:00+00:00</published><updated>2017-06-06T00:00:00+00:00</updated><id>https://j1yoo.github.io/blog/2017/Crawling_the_Annual_Reports_(i.e.,_10-Ks)_using_R</id><content type="html" xml:base="https://j1yoo.github.io/blog/2017/Crawling_the_Annual_Reports_(i.e.,_10-Ks)_using_R/"><![CDATA[<h3 id="terminal-and-tmux">Terminal and tmux:</h3> <p>Using a remote server for the parsing process.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ssh</span><span class="w"> </span><span class="o">&lt;</span><span class="n">account_ID</span><span class="o">&gt;@&lt;</span><span class="n">Server_IP_Address</span><span class="o">&gt;</span><span class="w">  </span><span class="c1">## Connect to a server</span><span class="w">
</span><span class="n">tmux</span><span class="w"> </span><span class="n">attach</span><span class="w"> </span><span class="o">-</span><span class="n">t</span><span class="w"> </span><span class="o">&lt;</span><span class="n">Session</span><span class="w"> </span><span class="n">Number</span><span class="o">&gt;</span><span class="w">  </span><span class="c1">## Attach a tmux session</span><span class="w">
</span><span class="n">R</span><span class="w">  </span><span class="c1">## Access R</span><span class="w">
</span></code></pre></div></div> <h3 id="r-session">R Session:</h3> <p>Loading relevant packages to be used in the process.</p> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">colorout</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">data.table</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringi</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">TenK</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rvest</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">rjson</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">ggtheme</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">DescTools</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <h3 id="collecting-the-sic-codes">Collecting the SIC codes</h3> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sicLIST</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="s2">"https://www.sec.gov/info/edgar/siccodes.htm"</span><span class="p">)</span><span class="w">
</span><span class="n">SICs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sicLIST</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"td"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">html_text</span><span class="p">()</span><span class="w">
</span><span class="n">SICs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">SICs</span><span class="p">[</span><span class="m">19</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">SICs</span><span class="p">)]</span><span class="w">
</span><span class="n">SICs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">SICs</span><span class="p">[</span><span class="o">!</span><span class="n">SICs</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="s2">" "</span><span class="p">)]</span><span class="w">
</span><span class="n">SICs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">matrix</span><span class="p">(</span><span class="n">SICs</span><span class="p">,</span><span class="w"> </span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="n">byrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">
</span><span class="n">SICs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">SICs</span><span class="p">[</span><span class="o">-</span><span class="n">nrow</span><span class="p">(</span><span class="n">SICs</span><span class="p">),]</span><span class="w"> </span><span class="c1">## SIC Table</span><span class="w">
</span><span class="n">SICs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">SICs</span><span class="p">[</span><span class="m">-1</span><span class="p">,</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="c1">## Removing all but the SIC codes</span><span class="w">
</span></code></pre></div></div> <h3 id="collecting-the-cik-ie-edgar-company-identifier-codes">Collecting the CIK (i.e., EDGAR company identifier) codes</h3> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="w">
</span><span class="n">j</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="w">
</span><span class="n">cikVEC</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
</span><span class="n">pages</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">from</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">10000000</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">100</span><span class="p">)</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">j</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">SICs</span><span class="p">)){</span><span class="w">
  </span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">pages</span><span class="p">)){</span><span class="w">
    </span><span class="n">sec</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_html</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;SIC="</span><span class="p">,</span><span class="w">
    </span><span class="n">SICs</span><span class="p">[</span><span class="n">j</span><span class="p">],</span><span class="w"> </span><span class="s2">"&amp;owner=include&amp;match=&amp;start="</span><span class="p">,</span><span class="w"> </span><span class="n">pages</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="w"> </span><span class="s2">"&amp;count=100&amp;hidefilings=0"</span><span class="p">))</span><span class="w">
    </span><span class="n">cik</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sec</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"td"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">strsplit</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">unlist</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
      </span><span class="n">stri_trim_both</span><span class="p">()</span><span class="w">
    </span><span class="k">if</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">cik</span><span class="p">)</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="m">0</span><span class="p">){</span><span class="w">
      </span><span class="c1">#cik &lt;- matrix(cik[-length(cik)], ncol = 3, byrow = T)</span><span class="w">
      </span><span class="c1">#cik &lt;- cik[-1,1]</span><span class="w">
      </span><span class="n">cik</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cik</span><span class="p">[</span><span class="n">substr</span><span class="p">(</span><span class="n">cik</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"00"</span><span class="p">]</span><span class="w">
      </span><span class="n">cikVEC</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">cik</span><span class="w">
      </span><span class="n">print</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"j = "</span><span class="p">,</span><span class="n">j</span><span class="p">,</span><span class="s2">" &amp; i = "</span><span class="p">,</span><span class="n">i</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="s2">" iteration completed."</span><span class="p">))</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="k">else</span><span class="p">{</span><span class="w">
      </span><span class="n">print</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"End of Loop for j = "</span><span class="p">,</span><span class="w"> </span><span class="n">j</span><span class="p">))</span><span class="w">
      </span><span class="k">break</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w"> </span><span class="c1">## Constructing a full CIK (EDGAR company identifier) list</span><span class="w">
</span><span class="n">rm</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ls</span><span class="p">()[</span><span class="o">!</span><span class="p">(</span><span class="n">ls</span><span class="p">()</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s1">'cikVEC'</span><span class="p">))])</span><span class="w">
</span><span class="n">cikVEC</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">do.call</span><span class="p">(</span><span class="s2">"rbind"</span><span class="p">,</span><span class="w"> </span><span class="n">cikVEC</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <h3 id="collecting-the-url-addresses-containing-10-k-forms">Collecting the URL addresses containing 10-K forms</h3> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="w">
</span><span class="n">tenkVEC</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">list</span><span class="p">()</span><span class="w">
</span><span class="n">formList</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"10-K"</span><span class="p">,</span><span class="w"> </span><span class="s2">"10-K405"</span><span class="p">,</span><span class="w"> </span><span class="s2">"10KSB"</span><span class="p">,</span><span class="w"> </span><span class="s2">"10KSB40"</span><span class="p">)</span><span class="w">  </span><span class="c1">## 10-K forms (including 10-K405, 10KSB, and 10KSB40 forms)</span><span class="w">

</span><span class="n">time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">k</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">cikVec</span><span class="p">)){</span><span class="w">
  </span><span class="n">TenKs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">html_session</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK="</span><span class="p">,</span><span class="w"> </span><span class="n">cikVec</span><span class="p">[</span><span class="n">k</span><span class="p">],</span><span class="s2">"&amp;type=10-k&amp;dateb=&amp;owner=exclude&amp;count=100"</span><span class="p">))</span><span class="w">
  </span><span class="n">tenk</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
  </span><span class="n">tenkUrl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
  </span><span class="n">try</span><span class="p">(</span><span class="n">tenkUrl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">TenKs</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"tr td a#documentsbutton"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_attr</span><span class="p">(</span><span class="s2">"href"</span><span class="p">))</span><span class="w">
  
  </span><span class="n">documentUrl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
  </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">identical</span><span class="p">(</span><span class="n">tenkUrl</span><span class="p">,</span><span class="n">character</span><span class="p">(</span><span class="m">0</span><span class="p">))){</span><span class="w">
    </span><span class="k">for</span><span class="p">(</span><span class="n">u</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">tenkUrl</span><span class="p">){</span><span class="w">
      </span><span class="n">docUrl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://www.sec.gov"</span><span class="p">,</span><span class="n">u</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_session</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"tr td a"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_attr</span><span class="p">(</span><span class="s2">"href"</span><span class="p">)</span><span class="w">
      </span><span class="n">documentUrl</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">append</span><span class="p">(</span><span class="n">documentUrl</span><span class="p">,</span><span class="w"> </span><span class="n">docUrl</span><span class="p">)</span><span class="w">
    </span><span class="p">}</span><span class="w">
    
    </span><span class="n">type</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
    </span><span class="k">for</span><span class="p">(</span><span class="n">u</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">tenkUrl</span><span class="p">){</span><span class="w">
      </span><span class="n">typ</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://www.sec.gov"</span><span class="p">,</span><span class="n">u</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_session</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_nodes</span><span class="p">(</span><span class="s2">"td"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">html_text</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
        </span><span class="n">matrix</span><span class="p">(</span><span class="n">ncol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">byrow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nb">T</span><span class="p">)</span><span class="w">
      </span><span class="n">type</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">type</span><span class="p">,</span><span class="w"> </span><span class="n">typ</span><span class="p">)</span><span class="w">
    </span><span class="p">}</span><span class="w">
    
    </span><span class="n">tenk</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.table</span><span class="p">(</span><span class="n">cbind</span><span class="p">(</span><span class="n">type</span><span class="p">,</span><span class="w"> </span><span class="n">documentUrl</span><span class="p">))</span><span class="w">
    </span><span class="c1"># tenk &lt;- tenk[V2 == "Complete submission text file" | V4 %in% formList, documentUrl]</span><span class="w">
    </span><span class="n">tenk</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tenk</span><span class="p">[</span><span class="n">V4</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">formList</span><span class="p">,</span><span class="w"> </span><span class="n">documentUrl</span><span class="p">]</span><span class="w">
    </span><span class="n">tenkVEC</span><span class="p">[[</span><span class="n">k</span><span class="p">]]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tenk</span><span class="w">
  </span><span class="p">}</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="w"> </span><span class="s2">" iteration completed."</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="s2">"End of Loop."</span><span class="p">)</span><span class="w">
</span><span class="n">difTime</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">time</span><span class="w">

</span><span class="n">tenkVEC</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.table</span><span class="p">(</span><span class="n">unlist</span><span class="p">(</span><span class="n">tenkVEC</span><span class="p">))</span><span class="w">
</span><span class="n">tenkVEC2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tenkVEC</span><span class="p">[,</span><span class="w"> </span><span class="n">.</span><span class="p">(</span><span class="n">url</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste0</span><span class="p">(</span><span class="s2">"https://www.sec.gov"</span><span class="p">,</span><span class="n">V1</span><span class="p">))]</span><span class="w">
</span></code></pre></div></div> <h3 id="collecting-the-item-1-sections-ie-business-descriptions-of-the-annual-reports">Collecting the item 1 sections (i.e., business descriptions) of the annual reports</h3> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="w">
</span><span class="n">error_list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
</span><span class="n">tenK_item1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vector</span><span class="p">(</span><span class="s2">"list"</span><span class="p">)</span><span class="w">

</span><span class="n">time</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Sys.time</span><span class="p">()</span><span class="w">
</span><span class="k">for</span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">length</span><span class="p">(</span><span class="n">tenkVEC2</span><span class="p">[,</span><span class="n">url</span><span class="p">])){</span><span class="w">
  </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">NULL</span><span class="w">
  </span><span class="n">tryCatch</span><span class="p">(</span><span class="n">res</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">TenK_process</span><span class="p">(</span><span class="n">URL</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">tenkVEC2</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">url</span><span class="p">],</span><span class="w"> </span><span class="n">retrieve</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"BD"</span><span class="p">),</span><span class="w">
           </span><span class="n">error</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">e</span><span class="p">)</span><span class="w"> </span><span class="n">error_list</span><span class="w"> </span><span class="o">&lt;&lt;-</span><span class="w"> </span><span class="n">append</span><span class="p">(</span><span class="n">error_list</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">))</span><span class="w">  </span><span class="c1">## length(error_list) = 2,381 --&gt; XBRL Viewer</span><span class="w">
  </span><span class="n">tenK_item1</span><span class="p">[[</span><span class="n">i</span><span class="p">]]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">res</span><span class="w">
  </span><span class="n">print</span><span class="p">(</span><span class="n">paste0</span><span class="p">(</span><span class="s2">"#"</span><span class="p">,</span><span class="w"> </span><span class="n">i</span><span class="p">,</span><span class="w"> </span><span class="s2">" iteration completed."</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="s2">"End of Loop"</span><span class="p">)</span><span class="w">
</span><span class="n">Sys.time</span><span class="p">()</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">time</span><span class="w">
</span></code></pre></div></div> <h3 id="saving-workspace">Saving workspace</h3> <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">save.image</span><span class="p">(</span><span class="s2">"./XXX.RData"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div> <p>End of Code</p> <h5 id="created-on-jun-3-2017">Created on Jun. 3, 2017</h5>]]></content><author><name></name></author><category term="Research"/><category term="Research"/><summary type="html"><![CDATA[Terminal and tmux: Using a remote server for the parsing process. ssh &lt;account_ID&gt;@&lt;Server_IP_Address&gt; ## Connect to a server tmux attach -t &lt;Session Number&gt; ## Attach a tmux session R ## Access R]]></summary></entry></feed>